openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://localhost:8443
  description: Generated server url
paths:
  /api/auth/refresh:
    post:
      tags:
      - rest-auth-controller
      summary: Refresh Token
      operationId: refresh
      parameters:
      - name: RefreshToken
        in: cookie
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
        "200":
          description: Token refreshed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "401":
          description: Unauthorized
        "400":
          description: Bad request
  /api/auth/logout:
    post:
      tags:
      - rest-auth-controller
      summary: Logout
      operationId: logout
      responses:
        "500":
          description: Internal server error
        "200":
          description: Logout successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
  /api/auth/login:
    post:
      tags:
      - rest-auth-controller
      summary: Login
      operationId: login
      parameters:
      - name: AccessToken
        in: cookie
        required: false
        schema:
          type: string
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "500":
          description: Internal server error
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "400":
          description: Bad request
        "200":
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
  /api/accounts:
    get:
      tags:
      - rest-account-controller
      summary: Get all accounts
      operationId: getAllAccounts
      responses:
        "200":
          description: Found the form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "500":
          description: Internal server error
        "400":
          description: Bad request
        "404":
          description: Account Repository not found
    post:
      tags:
      - rest-account-controller
      summary: Create New Account
      operationId: createAccount
      parameters:
      - name: inputUser
        in: query
        required: true
        schema:
          type: string
      - name: firstName
        in: query
        required: true
        schema:
          type: string
      - name: lastName
        in: query
        required: true
        schema:
          type: string
      - name: inputPassword
        in: query
        required: true
        schema:
          type: string
      - name: confirmPassword
        in: query
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
        "404":
          description: Account not Found
        "400":
          description: Bad request
        "200":
          description: Account Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
  /api/accounts/{id}/transfers:
    get:
      tags:
      - rest-transfer-controller
      summary: Get all user transfers
      operationId: getAllUserTransfer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
        "404":
          description: Transfer Repository not found
        "400":
          description: Bad request
        "200":
          description: Found the form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
    post:
      tags:
      - rest-transfer-controller
      summary: Make an user transfer
      operationId: createTransfer
      parameters:
      - name: receiver_iban
        in: query
        required: true
        schema:
          type: string
      - name: amount
        in: query
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
        "404":
          description: Transfer Repository not found
        "400":
          description: Bad request
        "200":
          description: transfer success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
  /api/accounts/{accountId}/image:
    get:
      tags:
      - rest-account-controller
      operationId: getImage
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
        "200":
          description: Get Image by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "400":
          description: Bad request
        "404":
          description: Form not found
    post:
      tags:
      - rest-account-controller
      summary: Upload image by ID
      operationId: uploadImage
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - imageFile
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
      responses:
        "200":
          description: Found the form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "500":
          description: Internal server error
        "400":
          description: Bad request
        "404":
          description: Form not found
    delete:
      tags:
      - rest-account-controller
      summary: Delete an image by id
      operationId: deleteImage
      parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
        "200":
          description: Image Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        "404":
          description: Image not found
        "400":
          description: Bad request
  /transfers_manager_load:
    get:
      tags:
      - transfers-manager-controller
      operationId: transferManager
      parameters:
      - name: startIndex
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: chunkSize
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transfer'
  /profile_data:
    get:
      tags:
      - profile-controller
      operationId: getTransferData
      parameters:
      - name: startIndex
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: chunkSize
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProcessedTransfer'
  /load-dynamic-content:
    get:
      tags:
      - dynamic-content-controller
      operationId: loadDynamicContent
      parameters:
      - name: client_iban
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /image_loader:
    get:
      tags:
      - profile-controller
      operationId: downloadImage
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /data:
    get:
      tags:
      - loan-request-controller
      operationId: getLoanData
      parameters:
      - name: startIndex
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: chunkSize
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: object
                  additionalProperties:
                    type: number
                    format: float
  /api/transfers:
    get:
      tags:
      - rest-transfer-controller
      summary: Get all transfers
      operationId: getAllTransfer
      responses:
        "500":
          description: Internal server error
        "404":
          description: Transfer Repository not found
        "400":
          description: Bad request
        "200":
          description: Found the form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
  /api/transfers/{id}:
    get:
      tags:
      - rest-transfer-controller
      summary: Get a Transfer by ID
      operationId: getTransfer
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "500":
          description: Internal server error
        "400":
          description: Bad request
        "404":
          description: Form not found
        "200":
          description: Found the Transfer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
  /api/accounts/{id}:
    get:
      tags:
      - rest-account-controller
      summary: Get an account by id
      operationId: getAccount
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "500":
          description: Internal server error
        "400":
          description: Bad request
        "200":
          description: Found the Account
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDTO'
        "404":
          description: Account not found
  /account_load:
    get:
      tags:
      - account-controller
      operationId: accountManager
      parameters:
      - name: startIndex
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: chunkSize
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountDTO'
components:
  schemas:
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    Account:
      type: object
      properties:
        account_id:
          type: integer
          format: int64
        name:
          type: string
        surname:
          type: string
        imageFile:
          type: object
          properties:
            binaryStream:
              type: object
        nip:
          type: string
        iban:
          type: string
    Transfer:
      type: object
      properties:
        transfer_id:
          type: integer
          format: int64
        senderIBAN:
          type: string
        receiverIBAN:
          type: string
        amount:
          type: integer
          format: int32
        date:
          type: string
        transferType:
          type: string
    ProcessedTransfer:
      type: object
      properties:
        transfer_id:
          type: integer
          format: int64
        clientIBAN:
          type: string
        senderIBAN:
          type: string
        receiverIBAN:
          type: string
        amount:
          type: integer
          format: int32
        date:
          type: string
        transferType:
          type: string
    AccountDTO:
      type: object
      properties:
        nip:
          type: string
        iban:
          type: string
        name:
          type: string
        surname:
          type: string
        imageBase64:
          type: string
